# Generated by Django 5.1.5 on 2025-09-19 12:44

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import re
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, default='', max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid Nepal mobile number. The number must start with one of the following prefixes: 984, 985, 986, 974, 975, 980, 981, 982, 961, 988, 972, 963, followed by 7 digits.', regex=re.compile('^(984|985|986|974|975|980|981|982|961|988|972|963)\\d{7}$'))])),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('role', models.CharField(choices=[(1, 'Super'), (2, 'Admin'), (3, 'General'), (4, 'Whistle Blower'), (5, 'Fact Checker')], default=3, max_length=20)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password_reset_token', models.CharField(blank=True, default='', max_length=255)),
                ('password_reset_token_created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'constraints': [models.UniqueConstraint(condition=models.Q(('deleted', None)), fields=('email',), name='user_unique_email_safedelete'), models.UniqueConstraint(condition=models.Q(('deleted', None)), fields=('phone_number',), name='user_unique_phone_number_safedelete')],
            },
        ),
    ]
