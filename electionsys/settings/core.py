"""
Django settings for electionsys project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

from electionsys.utils import check_all_okay, get_config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# Since this core.py file is under settings folder, we need to go one level up
BASE_DIR = Path(__file__).resolve().parent.parent.parent

check_all_okay()

# SECURITY WARNING: don't run with debug turned on in production!
# Temporarily use os.environ.get("DJANGO_DEBUG") to get the DJANGO_DEBUG value, according to that, we'll later use .env or .env.prod with python decouple
# NOTE: We can be sure that DJANGO_DEBUG is set cause check_all_okay() verifies that
DEBUG = os.environ.get("DJANGO_DEBUG")
# Print in green color
print("\033[92m---------DEBUG: {} is used---------\033[0m".format(DEBUG))

# get correct config (.env or .env.prod)

config = get_config(debug=DEBUG)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Now use config to get environment variables
SECRET_KEY = "django-insecure-k19_+9_d)g^i(x(26$xi0ikx678-x2dusv!(-jiz)$-gdg%vwc"


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "electionsys.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "electionsys.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": config("DJANGO_DB_ENGINE"),
        "NAME": config("DJANGO_DB_NAME"),
        "USER": config("DJANGO_DB_USER"),
        "PASSWORD": config("DJANGO_DB_PASSWORD"),
        "HOST": config("DJANGO_DB_HOST"),
        "PORT": config("DJANGO_DB_PORT"),
    },
    "sqlite": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Where your source static files live during development
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Your app's static files
]
# Apparently files from STATICFILES_DIRS will be available in STATIC_ROOT if we use collectstatic command
# Where collectstatic puts all static files (production only)
STATIC_ROOT = BASE_DIR / "collected_static"

# media files
MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# cors

# Don't use CORS_ALLOW_ALL_ORIGINS = True with CORS_ALLOW_CREDENTIALS = True. It will silently fail due to CORS policy.

CORS_ALLOWED_ORIGINS = [
    config("DJANGO_FRONTEND_URL"),
]

# CORS_ORIGIN_WHITELIST = ()

CORS_EXPOSE_HEADERS = [
    "Content-Type",
    "Authorization",
    "X-RateLimit-Limit",
]

CORS_ALLOW_CREDENTIALS = True
